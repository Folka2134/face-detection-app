{"version":3,"sources":["components/Navigation/Navigation.js","components/Logo/Logo.js","components/Profile/Profile.js","components/ImageLinkBox/ImageLinkBox.js","components/FaceDetection/FaceDetection.js","components/Signin/Signin.js","components/Register/Register.js","App.js","serviceWorker.js","index.js","components/Logo/brain.png"],"names":["Navigation","onRouteChange","isSignedIn","className","style","display","justifyContent","onClick","Logo","alt","src","brain","Profile","ImageLinkBox","onInputChange","onButtonSubmit","type","onChange","FaceDetection","imageUrl","box","id","width","height","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Signin","onSignIn","props","this","htmlFor","name","onSignInEmail","onSignInPassword","value","href","React","Component","Register","onRegister","onRegisterName","onRegisterEmail","onRegisterPassword","app","Clarifai","App","apiKey","particlesOptions","particles","number","line_linked","shadow","enable","color","blur","initialState","input","route","user","email","password","entries","joined","loadUser","setState","calculateFaceBox","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","event","target","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","log","params","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.19e944f4.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\n  if (isSignedIn) {\n    return (\n      <nav\n        className=\"white\"\n        style={{ display: \"flex\", justifyContent: \"flex-end\" }}\n      >\n        <p\n          className=\"f3 link dim underline pa3 pointer\"\n          onClick={() => onRouteChange(\"signout\")}\n        >\n          Sign out\n        </p>\n      </nav>\n    );\n  } else {\n    return (\n      <div\n        className=\"white\"\n        style={{ display: \"flex\", justifyContent: \"flex-end\" }}\n      >\n        <p\n          className=\"f3 link dim underline pa3 pointer\"\n          onClick={() => onRouteChange(\"home\")}\n        >\n          Guest\n        </p>\n        <p\n          className=\"f3 link dim underline pa3 pointer\"\n          onClick={() => onRouteChange(\"signin\")}\n        >\n          Sign in\n        </p>\n        <p\n          className=\"f3 link dim  underline pa3 pointer\"\n          onClick={() => onRouteChange(\"register\")}\n        >\n          Register\n        </p>\n      </div>\n    );\n  }\n};\n\nexport default Navigation;\n","import React from \"react\";\n// import Tilt from \"react-tilt\";\nimport brain from \"./brain.png\";\n\nconst Logo = () => {\n  return (\n    <div className=\"logo-container ma4 mt0 pa3\">\n      <div className=\"Tilt-inner\">\n        <img alt=\"\" src={brain} />\n      </div>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React from \"react\";\n\nconst Profile = () => {\n  return (\n    <div>\n      <p className=\"white f3 ma0 mt5\">Hey Otis. Your current entry count is:</p>\n      <p className=\"white f2 ma0\">#5</p>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport \"./ImageLinkBox.css\";\n\nconst ImageLinkBox = ({ onInputChange, onButtonSubmit }) => {\n  return (\n    <div>\n      <p className=\"white o-40\">\n        This magic brain can detect images in your images. Give it a try!\n      </p>\n      <div className=\"center\">\n        <div className=\"center form pa4 br3 shadow-5\">\n          <input\n            type=\"text\"\n            className=\"f4 pa2 w-70 center\"\n            onChange={onInputChange}\n          />\n          <button\n            className=\"w-30 grow f4 link ph3 pv2 dib white bg-purple\"\n            onClick={onButtonSubmit}\n          >\n            DETECT\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageLinkBox;\n","import React from \"react\";\nimport \"./FaceDetection.css\";\n\nconst FaceDetection = ({ imageUrl, box }) => {\n  return (\n    <div className=\"center mt4 \">\n      <div className=\"absolute mt2\">\n        <img\n          id=\"inputimage\"\n          alt=\"\"\n          src={imageUrl}\n          width=\"500px\"\n          height=\"auto\"\n        />\n        <div\n          className=\"bounding-box\"\n          style={{\n            top: box.topRow,\n            right: box.rightCol,\n            bottom: box.bottomRow,\n            left: box.leftCol,\n          }}\n        ></div>\n      </div>\n    </div>\n  );\n};\n\nexport default FaceDetection;\n","import React from \"react\";\n\nclass Signin extends React.Component {\n  onSignIn = () => {\n    this.props.onRouteChange(\"home\");\n  };\n\n  render() {\n    const { onRouteChange } = this.props;\n    return (\n      <div>\n        <article className=\"br3 ba white mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n          <main className=\"pa4 white\">\n            <div className=\"measure\">\n              <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                <legend className=\"f2 fw6 ph0 mh0 center\">Sign In</legend>\n                <div className=\"mt3\">\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\n                    Email\n                  </label>\n                  <input\n                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100 white\"\n                    type=\"email\"\n                    name=\"email-address\"\n                    id=\"email-address\"\n                    onChange={this.onSignInEmail}\n                  />\n                </div>\n                <div className=\"mv3\">\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\n                    Password\n                  </label>\n                  <input\n                    className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100 white\"\n                    type=\"password\"\n                    name=\"password\"\n                    id=\"password\"\n                    onChange={this.onSignInPassword}\n                  />\n                </div>\n              </fieldset>\n              <div className=\"\">\n                <input\n                  className=\"b ph3 pv2 input-reset ba white bg-transparent grow pointer f6 dib\"\n                  type=\"submit\"\n                  value=\"Sign in\"\n                  onClick={this.onSignIn}\n                />\n              </div>\n              <div className=\"lh-copy mt3\">\n                <a\n                  href=\"#0\"\n                  className=\"f6 link dim white db\"\n                  onClick={() => onRouteChange(\"register\")}\n                >\n                  Register\n                </a>\n              </div>\n            </div>\n          </main>\n        </article>\n      </div>\n    );\n  }\n}\n\nexport default Signin;\n","import React from \"react\";\n\nclass Register extends React.Component {\n  onRegister = () => {\n    this.props.onRouteChange(\"home\");\n  };\n\n  render() {\n    const { onRouteChange } = this.props;\n    return (\n      <div>\n        <article className=\"br3 ba white mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n          <main className=\"pa4 white\">\n            <div className=\"measure\">\n              <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                <legend className=\"f2 fw6 ph0 mh0 center\">Register</legend>\n                <div className=\"mt3\">\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\n                    Name\n                  </label>\n                  <input\n                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100 white\"\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"name\"\n                    onChange={this.onRegisterName}\n                  />\n                </div>\n                <div className=\"mt3\">\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\n                    Email\n                  </label>\n                  <input\n                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100 white\"\n                    type=\"email\"\n                    name=\"email-address\"\n                    id=\"email-address\"\n                    onChange={this.onRegisterEmail}\n                  />\n                </div>\n                <div className=\"mv3\">\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\n                    Password\n                  </label>\n                  <input\n                    className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100 white\"\n                    type=\"password\"\n                    name=\"password\"\n                    id=\"password\"\n                    onChange={this.onRegisterPassword}\n                  />\n                </div>\n              </fieldset>\n              <div className=\"\">\n                <input\n                  className=\"b ph3 pv2 input-reset ba white bg-transparent grow pointer f6 dib\"\n                  type=\"submit\"\n                  value=\"Register\"\n                  onClick={this.onRegister}\n                />\n              </div>\n              <div className=\"lh-copy mt3\">\n                <a\n                  href=\"#0\"\n                  className=\"f6 link dim white db\"\n                  onClick={() => onRouteChange(\"signin\")}\n                >\n                  Signin\n                </a>\n              </div>\n            </div>\n          </main>\n        </article>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n","import React from \"react\";\nimport Particles from \"react-particles-js\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Logo from \"./components/Logo/Logo\";\nimport Profile from \"./components/Profile/Profile\";\nimport ImageLinkBox from \"./components/ImageLinkBox/ImageLinkBox\";\nimport FaceDetection from \"./components/FaceDetection/FaceDetection\";\nimport Signin from \"./components/Signin/Signin\";\nimport Register from \"./components/Register/Register\";\n\nimport Clarifai from \"clarifai\";\nimport \"./App.css\";\n\nconst app = new Clarifai.App({\n  apiKey: \"bfa999187c9d4f528dbaeb04de3bd334\",\n});\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 50,\n    },\n    line_linked: {\n      shadow: {\n        enable: true,\n        color: \"#3CA9D1\",\n        blur: 10,\n      },\n    },\n  },\n};\n\nconst initialState = {\n  input: \"\",\n  imageUrl: \"\",\n  route: \"signin\",\n  isSignedIn: false,\n  box: {},\n  user: {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    entries: \"\",\n    joined: \"\",\n  },\n};\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  loadUser = (user) => {\n    this.setState({ user: user });\n  };\n\n  calculateFaceBox = (data) => {\n    const clarifaiFace =\n      data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById(\"inputimage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height,\n    };\n  };\n\n  displayFaceBox = (box) => {\n    this.setState({ box: box });\n  };\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  };\n\n  onButtonSubmit = () => {\n    this.setState({ imageUrl: this.state.input });\n    app.models\n      .predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n      .then((response) => {\n        this.displayFaceBox(this.calculateFaceBox(response));\n      })\n      .catch((err) => console.log(err));\n  };\n\n  onRouteChange = (route) => {\n    if (route === \"signout\") {\n      this.setState(initialState);\n    } else if (route === \"home\") {\n      this.setState({ isSignedIn: true });\n    }\n    this.setState({ route: route });\n  };\n\n  render() {\n    const { imageUrl, route, isSignedIn, box } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles params={particlesOptions} className=\"particles\" />\n        <Navigation\n          onRouteChange={this.onRouteChange}\n          isSignedIn={isSignedIn}\n        />\n        {route === \"home\" ? (\n          <div>\n            <Logo />\n            <Profile\n              name={this.state.user.name}\n              entries={this.state.user.entries}\n            />\n            <ImageLinkBox\n              onInputChange={this.onInputChange}\n              onButtonSubmit={this.onButtonSubmit}\n            />\n            <FaceDetection imageUrl={imageUrl} box={box} />\n          </div>\n        ) : route === \"signin\" ? (\n          <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n        ) : route === \"signout\" ? (\n          <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n        ) : (\n          <Register\n            loadUser={this.loadUser}\n            onRouteChange={this.onRouteChange}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"tachyons\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/brain.fee6bc46.png\";"],"sourceRoot":""}